// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyProject.Migrations
{
    [DbContext(typeof(MvcSchoolContext))]
    [Migration("20220802234806_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("MvcCour.Models.Cour", b =>
                {
                    b.Property<int>("FiliereID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Filiere_idFiliereId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FiliereID");

                    b.HasIndex("Filiere_idFiliereId");

                    b.ToTable("Cour");
                });

            modelBuilder.Entity("MvcFiliere.Models.Filiere", b =>
                {
                    b.Property<int>("FiliereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FiliereId");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("MvcNote.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FiliereID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("NoteId");

                    b.HasIndex("CourID");

                    b.HasIndex("FiliereID");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("MvcStudent.Models.Student", b =>
                {
                    b.Property<int>("FiliereID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Filiere_idFiliereId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FiliereID");

                    b.HasIndex("Filiere_idFiliereId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("MvcCour.Models.Cour", b =>
                {
                    b.HasOne("MvcFiliere.Models.Filiere", "Filiere_id")
                        .WithMany()
                        .HasForeignKey("Filiere_idFiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere_id");
                });

            modelBuilder.Entity("MvcNote.Models.Note", b =>
                {
                    b.HasOne("MvcCour.Models.Cour", "Cour_id")
                        .WithMany()
                        .HasForeignKey("CourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcFiliere.Models.Filiere", "Filiere_id")
                        .WithMany()
                        .HasForeignKey("FiliereID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cour_id");

                    b.Navigation("Filiere_id");
                });

            modelBuilder.Entity("MvcStudent.Models.Student", b =>
                {
                    b.HasOne("MvcFiliere.Models.Filiere", "Filiere_id")
                        .WithMany()
                        .HasForeignKey("Filiere_idFiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere_id");
                });
#pragma warning restore 612, 618
        }
    }
}
